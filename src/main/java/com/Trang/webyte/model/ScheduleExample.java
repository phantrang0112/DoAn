package com.Trang.webyte.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ScheduleExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public ScheduleExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andScheduleidIsNull() {
			addCriterion("scheduleid is null");
			return (Criteria) this;
		}

		public Criteria andScheduleidIsNotNull() {
			addCriterion("scheduleid is not null");
			return (Criteria) this;
		}

		public Criteria andScheduleidEqualTo(Integer value) {
			addCriterion("scheduleid =", value, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andScheduleidNotEqualTo(Integer value) {
			addCriterion("scheduleid <>", value, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andScheduleidGreaterThan(Integer value) {
			addCriterion("scheduleid >", value, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andScheduleidGreaterThanOrEqualTo(Integer value) {
			addCriterion("scheduleid >=", value, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andScheduleidLessThan(Integer value) {
			addCriterion("scheduleid <", value, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andScheduleidLessThanOrEqualTo(Integer value) {
			addCriterion("scheduleid <=", value, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andScheduleidIn(List<Integer> values) {
			addCriterion("scheduleid in", values, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andScheduleidNotIn(List<Integer> values) {
			addCriterion("scheduleid not in", values, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andScheduleidBetween(Integer value1, Integer value2) {
			addCriterion("scheduleid between", value1, value2, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andScheduleidNotBetween(Integer value1, Integer value2) {
			addCriterion("scheduleid not between", value1, value2, "scheduleid");
			return (Criteria) this;
		}

		public Criteria andDoctoridIsNull() {
			addCriterion("doctorid is null");
			return (Criteria) this;
		}

		public Criteria andDoctoridIsNotNull() {
			addCriterion("doctorid is not null");
			return (Criteria) this;
		}

		public Criteria andDoctoridEqualTo(Integer value) {
			addCriterion("doctorid =", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridNotEqualTo(Integer value) {
			addCriterion("doctorid <>", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridGreaterThan(Integer value) {
			addCriterion("doctorid >", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridGreaterThanOrEqualTo(Integer value) {
			addCriterion("doctorid >=", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridLessThan(Integer value) {
			addCriterion("doctorid <", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridLessThanOrEqualTo(Integer value) {
			addCriterion("doctorid <=", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridIn(List<Integer> values) {
			addCriterion("doctorid in", values, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridNotIn(List<Integer> values) {
			addCriterion("doctorid not in", values, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridBetween(Integer value1, Integer value2) {
			addCriterion("doctorid between", value1, value2, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridNotBetween(Integer value1, Integer value2) {
			addCriterion("doctorid not between", value1, value2, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDutydayIsNull() {
			addCriterion("dutyday is null");
			return (Criteria) this;
		}

		public Criteria andDutydayIsNotNull() {
			addCriterion("dutyday is not null");
			return (Criteria) this;
		}

		public Criteria andDutydayEqualTo(Date value) {
			addCriterionForJDBCDate("dutyday =", value, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutydayNotEqualTo(Date value) {
			addCriterionForJDBCDate("dutyday <>", value, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutydayGreaterThan(Date value) {
			addCriterionForJDBCDate("dutyday >", value, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutydayGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("dutyday >=", value, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutydayLessThan(Date value) {
			addCriterionForJDBCDate("dutyday <", value, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutydayLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("dutyday <=", value, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutydayIn(List<Date> values) {
			addCriterionForJDBCDate("dutyday in", values, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutydayNotIn(List<Date> values) {
			addCriterionForJDBCDate("dutyday not in", values, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutydayBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("dutyday between", value1, value2, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutydayNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("dutyday not between", value1, value2, "dutyday");
			return (Criteria) this;
		}

		public Criteria andDutyweekIsNull() {
			addCriterion("dutyweek is null");
			return (Criteria) this;
		}

		public Criteria andDutyweekIsNotNull() {
			addCriterion("dutyweek is not null");
			return (Criteria) this;
		}

		public Criteria andDutyweekEqualTo(Integer value) {
			addCriterion("dutyweek =", value, "dutyweek");
			return (Criteria) this;
		}

		public Criteria andDutyweekNotEqualTo(Integer value) {
			addCriterion("dutyweek <>", value, "dutyweek");
			return (Criteria) this;
		}

		public Criteria andDutyweekGreaterThan(Integer value) {
			addCriterion("dutyweek >", value, "dutyweek");
			return (Criteria) this;
		}

		public Criteria andDutyweekGreaterThanOrEqualTo(Integer value) {
			addCriterion("dutyweek >=", value, "dutyweek");
			return (Criteria) this;
		}

		public Criteria andDutyweekLessThan(Integer value) {
			addCriterion("dutyweek <", value, "dutyweek");
			return (Criteria) this;
		}

		public Criteria andDutyweekLessThanOrEqualTo(Integer value) {
			addCriterion("dutyweek <=", value, "dutyweek");
			return (Criteria) this;
		}

		public Criteria andDutyweekIn(List<Integer> values) {
			addCriterion("dutyweek in", values, "dutyweek");
			return (Criteria) this;
		}

		public Criteria andDutyweekNotIn(List<Integer> values) {
			addCriterion("dutyweek not in", values, "dutyweek");
			return (Criteria) this;
		}

		public Criteria andDutyweekBetween(Integer value1, Integer value2) {
			addCriterion("dutyweek between", value1, value2, "dutyweek");
			return (Criteria) this;
		}

		public Criteria andDutyweekNotBetween(Integer value1, Integer value2) {
			addCriterion("dutyweek not between", value1, value2, "dutyweek");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table schedule
	 * @mbg.generated  Wed May 25 09:13:05 ICT 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table schedule
     *
     * @mbg.generated do_not_delete_during_merge Tue May 24 09:26:52 ICT 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}