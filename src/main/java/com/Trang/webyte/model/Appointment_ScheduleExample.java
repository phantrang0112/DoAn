package com.Trang.webyte.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class Appointment_ScheduleExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public Appointment_ScheduleExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdappointmentScheduleIsNull() {
			addCriterion("idappointment_schedule is null");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleIsNotNull() {
			addCriterion("idappointment_schedule is not null");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleEqualTo(Integer value) {
			addCriterion("idappointment_schedule =", value, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleNotEqualTo(Integer value) {
			addCriterion("idappointment_schedule <>", value, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleGreaterThan(Integer value) {
			addCriterion("idappointment_schedule >", value, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleGreaterThanOrEqualTo(Integer value) {
			addCriterion("idappointment_schedule >=", value, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleLessThan(Integer value) {
			addCriterion("idappointment_schedule <", value, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleLessThanOrEqualTo(Integer value) {
			addCriterion("idappointment_schedule <=", value, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleIn(List<Integer> values) {
			addCriterion("idappointment_schedule in", values, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleNotIn(List<Integer> values) {
			addCriterion("idappointment_schedule not in", values, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleBetween(Integer value1, Integer value2) {
			addCriterion("idappointment_schedule between", value1, value2, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andIdappointmentScheduleNotBetween(Integer value1, Integer value2) {
			addCriterion("idappointment_schedule not between", value1, value2, "idappointmentSchedule");
			return (Criteria) this;
		}

		public Criteria andDoctoridIsNull() {
			addCriterion("doctorid is null");
			return (Criteria) this;
		}

		public Criteria andDoctoridIsNotNull() {
			addCriterion("doctorid is not null");
			return (Criteria) this;
		}

		public Criteria andDoctoridEqualTo(Integer value) {
			addCriterion("doctorid =", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridNotEqualTo(Integer value) {
			addCriterion("doctorid <>", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridGreaterThan(Integer value) {
			addCriterion("doctorid >", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridGreaterThanOrEqualTo(Integer value) {
			addCriterion("doctorid >=", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridLessThan(Integer value) {
			addCriterion("doctorid <", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridLessThanOrEqualTo(Integer value) {
			addCriterion("doctorid <=", value, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridIn(List<Integer> values) {
			addCriterion("doctorid in", values, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridNotIn(List<Integer> values) {
			addCriterion("doctorid not in", values, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridBetween(Integer value1, Integer value2) {
			addCriterion("doctorid between", value1, value2, "doctorid");
			return (Criteria) this;
		}

		public Criteria andDoctoridNotBetween(Integer value1, Integer value2) {
			addCriterion("doctorid not between", value1, value2, "doctorid");
			return (Criteria) this;
		}

		public Criteria andPatientidIsNull() {
			addCriterion("patientid is null");
			return (Criteria) this;
		}

		public Criteria andPatientidIsNotNull() {
			addCriterion("patientid is not null");
			return (Criteria) this;
		}

		public Criteria andPatientidEqualTo(Integer value) {
			addCriterion("patientid =", value, "patientid");
			return (Criteria) this;
		}

		public Criteria andPatientidNotEqualTo(Integer value) {
			addCriterion("patientid <>", value, "patientid");
			return (Criteria) this;
		}

		public Criteria andPatientidGreaterThan(Integer value) {
			addCriterion("patientid >", value, "patientid");
			return (Criteria) this;
		}

		public Criteria andPatientidGreaterThanOrEqualTo(Integer value) {
			addCriterion("patientid >=", value, "patientid");
			return (Criteria) this;
		}

		public Criteria andPatientidLessThan(Integer value) {
			addCriterion("patientid <", value, "patientid");
			return (Criteria) this;
		}

		public Criteria andPatientidLessThanOrEqualTo(Integer value) {
			addCriterion("patientid <=", value, "patientid");
			return (Criteria) this;
		}

		public Criteria andPatientidIn(List<Integer> values) {
			addCriterion("patientid in", values, "patientid");
			return (Criteria) this;
		}

		public Criteria andPatientidNotIn(List<Integer> values) {
			addCriterion("patientid not in", values, "patientid");
			return (Criteria) this;
		}

		public Criteria andPatientidBetween(Integer value1, Integer value2) {
			addCriterion("patientid between", value1, value2, "patientid");
			return (Criteria) this;
		}

		public Criteria andPatientidNotBetween(Integer value1, Integer value2) {
			addCriterion("patientid not between", value1, value2, "patientid");
			return (Criteria) this;
		}

		public Criteria andDateIsNull() {
			addCriterion("date is null");
			return (Criteria) this;
		}

		public Criteria andDateIsNotNull() {
			addCriterion("date is not null");
			return (Criteria) this;
		}

		public Criteria andDateEqualTo(Date value) {
			addCriterionForJDBCDate("date =", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("date <>", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThan(Date value) {
			addCriterionForJDBCDate("date >", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("date >=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThan(Date value) {
			addCriterionForJDBCDate("date <", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("date <=", value, "date");
			return (Criteria) this;
		}

		public Criteria andDateIn(List<Date> values) {
			addCriterionForJDBCDate("date in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("date not in", values, "date");
			return (Criteria) this;
		}

		public Criteria andDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("date between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("date not between", value1, value2, "date");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(String value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(String value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(String value) {
			addCriterion("status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(String value) {
			addCriterion("status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(String value) {
			addCriterion("status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(String value) {
			addCriterion("status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLike(String value) {
			addCriterion("status like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotLike(String value) {
			addCriterion("status not like", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<String> values) {
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<String> values) {
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(String value1, String value2) {
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(String value1, String value2) {
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andNumberIsNull() {
			addCriterion("number is null");
			return (Criteria) this;
		}

		public Criteria andNumberIsNotNull() {
			addCriterion("number is not null");
			return (Criteria) this;
		}

		public Criteria andNumberEqualTo(Integer value) {
			addCriterion("number =", value, "number");
			return (Criteria) this;
		}

		public Criteria andNumberNotEqualTo(Integer value) {
			addCriterion("number <>", value, "number");
			return (Criteria) this;
		}

		public Criteria andNumberGreaterThan(Integer value) {
			addCriterion("number >", value, "number");
			return (Criteria) this;
		}

		public Criteria andNumberGreaterThanOrEqualTo(Integer value) {
			addCriterion("number >=", value, "number");
			return (Criteria) this;
		}

		public Criteria andNumberLessThan(Integer value) {
			addCriterion("number <", value, "number");
			return (Criteria) this;
		}

		public Criteria andNumberLessThanOrEqualTo(Integer value) {
			addCriterion("number <=", value, "number");
			return (Criteria) this;
		}

		public Criteria andNumberIn(List<Integer> values) {
			addCriterion("number in", values, "number");
			return (Criteria) this;
		}

		public Criteria andNumberNotIn(List<Integer> values) {
			addCriterion("number not in", values, "number");
			return (Criteria) this;
		}

		public Criteria andNumberBetween(Integer value1, Integer value2) {
			addCriterion("number between", value1, value2, "number");
			return (Criteria) this;
		}

		public Criteria andNumberNotBetween(Integer value1, Integer value2) {
			addCriterion("number not between", value1, value2, "number");
			return (Criteria) this;
		}

		public Criteria andTimeIsNull() {
			addCriterion("time is null");
			return (Criteria) this;
		}

		public Criteria andTimeIsNotNull() {
			addCriterion("time is not null");
			return (Criteria) this;
		}

		public Criteria andTimeEqualTo(String value) {
			addCriterion("time =", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotEqualTo(String value) {
			addCriterion("time <>", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThan(String value) {
			addCriterion("time >", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeGreaterThanOrEqualTo(String value) {
			addCriterion("time >=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThan(String value) {
			addCriterion("time <", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLessThanOrEqualTo(String value) {
			addCriterion("time <=", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeLike(String value) {
			addCriterion("time like", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotLike(String value) {
			addCriterion("time not like", value, "time");
			return (Criteria) this;
		}

		public Criteria andTimeIn(List<String> values) {
			addCriterion("time in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotIn(List<String> values) {
			addCriterion("time not in", values, "time");
			return (Criteria) this;
		}

		public Criteria andTimeBetween(String value1, String value2) {
			addCriterion("time between", value1, value2, "time");
			return (Criteria) this;
		}

		public Criteria andTimeNotBetween(String value1, String value2) {
			addCriterion("time not between", value1, value2, "time");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table appointment_schedule
	 * @mbg.generated  Tue Apr 12 14:42:06 ICT 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table appointment_schedule
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 04 14:21:11 ICT 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}