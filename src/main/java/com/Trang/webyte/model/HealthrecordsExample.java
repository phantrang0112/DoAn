package com.Trang.webyte.model;

import java.util.ArrayList;
import java.util.List;

public class HealthrecordsExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public HealthrecordsExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andHealthrecordsidIsNull() {
			addCriterion("healthrecordsid is null");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidIsNotNull() {
			addCriterion("healthrecordsid is not null");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidEqualTo(Integer value) {
			addCriterion("healthrecordsid =", value, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidNotEqualTo(Integer value) {
			addCriterion("healthrecordsid <>", value, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidGreaterThan(Integer value) {
			addCriterion("healthrecordsid >", value, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidGreaterThanOrEqualTo(Integer value) {
			addCriterion("healthrecordsid >=", value, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidLessThan(Integer value) {
			addCriterion("healthrecordsid <", value, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidLessThanOrEqualTo(Integer value) {
			addCriterion("healthrecordsid <=", value, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidIn(List<Integer> values) {
			addCriterion("healthrecordsid in", values, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidNotIn(List<Integer> values) {
			addCriterion("healthrecordsid not in", values, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidBetween(Integer value1, Integer value2) {
			addCriterion("healthrecordsid between", value1, value2, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andHealthrecordsidNotBetween(Integer value1, Integer value2) {
			addCriterion("healthrecordsid not between", value1, value2, "healthrecordsid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidIsNull() {
			addCriterion("prescriptionid is null");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidIsNotNull() {
			addCriterion("prescriptionid is not null");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidEqualTo(Integer value) {
			addCriterion("prescriptionid =", value, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidNotEqualTo(Integer value) {
			addCriterion("prescriptionid <>", value, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidGreaterThan(Integer value) {
			addCriterion("prescriptionid >", value, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidGreaterThanOrEqualTo(Integer value) {
			addCriterion("prescriptionid >=", value, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidLessThan(Integer value) {
			addCriterion("prescriptionid <", value, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidLessThanOrEqualTo(Integer value) {
			addCriterion("prescriptionid <=", value, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidIn(List<Integer> values) {
			addCriterion("prescriptionid in", values, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidNotIn(List<Integer> values) {
			addCriterion("prescriptionid not in", values, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidBetween(Integer value1, Integer value2) {
			addCriterion("prescriptionid between", value1, value2, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andPrescriptionidNotBetween(Integer value1, Integer value2) {
			addCriterion("prescriptionid not between", value1, value2, "prescriptionid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidIsNull() {
			addCriterion("appointscheduleid is null");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidIsNotNull() {
			addCriterion("appointscheduleid is not null");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidEqualTo(Integer value) {
			addCriterion("appointscheduleid =", value, "appointscheduleid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidNotEqualTo(Integer value) {
			addCriterion("appointscheduleid <>", value, "appointscheduleid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidGreaterThan(Integer value) {
			addCriterion("appointscheduleid >", value, "appointscheduleid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidGreaterThanOrEqualTo(Integer value) {
			addCriterion("appointscheduleid >=", value, "appointscheduleid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidLessThan(Integer value) {
			addCriterion("appointscheduleid <", value, "appointscheduleid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidLessThanOrEqualTo(Integer value) {
			addCriterion("appointscheduleid <=", value, "appointscheduleid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidIn(List<Integer> values) {
			addCriterion("appointscheduleid in", values, "appointscheduleid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidNotIn(List<Integer> values) {
			addCriterion("appointscheduleid not in", values, "appointscheduleid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidBetween(Integer value1, Integer value2) {
			addCriterion("appointscheduleid between", value1, value2, "appointscheduleid");
			return (Criteria) this;
		}

		public Criteria andAppointscheduleidNotBetween(Integer value1, Integer value2) {
			addCriterion("appointscheduleid not between", value1, value2, "appointscheduleid");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table healthrecords
	 * @mbg.generated  Wed Jun 22 09:57:43 ICT 2022
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table healthrecords
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 04 14:21:11 ICT 2022
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}